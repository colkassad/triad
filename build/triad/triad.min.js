/*! triad 2015-02-27 */
function Triad(){}Triad.prototype.convexHull=function(a){var b=this,c=JSON.stringify(a.features);if(c=JSON.parse(c),0===c.length)return{type:"FeatureCollection",features:[]};if(1===c.length)return{type:"FeatureCollection",features:c};c.sort(function(a,b){return a.geometry.coordinates[0]==b.geometry.coordinates[0]?a.geometry.coordinates[1]-b.geometry.coordinates[1]:a.geometry.coordinates[0]-b.geometry.coordinates[0]});for(var d=[],e=0;e<c.length;e++){for(;d.length>=2&&b.crossProduct(d[d.length-2],d[d.length-1],c[e])<=0;)d.pop();d.push(c[e])}for(var f=[],e=c.length-1;e>=0;e--){for(;f.length>=2&&b.crossProduct(f[f.length-2],f[f.length-1],c[e])<=0;)f.pop();f.push(c[e])}f.pop(),d.pop();var g=d.concat(f);return{type:"FeatureCollection",features:g}},Triad.prototype.crossProduct=function(a,b,c){return(b.geometry.coordinates[0]-a.geometry.coordinates[0])*(c.geometry.coordinates[1]-a.geometry.coordinates[1])-(b.geometry.coordinates[1]-a.geometry.coordinates[1])*(c.geometry.coordinates[0]-a.geometry.coordinates[0])};